@model Dyslexword.Models.LongReading

@{
    ViewBag.Title = "Editar Nivel";
}

<h2>Lectura Comprensiva</h2>
<h4>Edita el nivel</h4>


@using (Html.BeginForm("Edit", "LongReading", FormMethod.Post, new { role = "form" }))
{

    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
<div class="row">
    <div class="col-md-6">

        <div class="form-group mb-2">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-2">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group mb-2">
            @Html.LabelFor(model => model.CorrectOption, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CorrectOption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CorrectOption, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-2">
            @Html.LabelFor(model => model.OptionA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OptionA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-2">
            @Html.LabelFor(model => model.OptionB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OptionB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionB, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group col-lg-2">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Editar" class="btn btn-primary" />
            </div>
        </div>
        <div class="col-lg-2">
            @Html.ActionLink("Ver niveles", "Index", "LongReading", null, new { @class = "btn btn-primary" })
        </div>
    </div>

</div>


</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
